// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from '@xata.io/client'
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client'

const tables = [
  {
    name: 'xata',
    columns: [
      { name: 'slug', type: 'string' },
      { name: 'title', type: 'string' },
      { name: 'content', type: 'text' },
      { name: 'modified_at', type: 'string' },
      { name: 'section', type: 'string' },
      { name: 'keywords', type: 'text' },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type XataDocs = InferredTypes['xata']
export type XataDocsRecord = XataDocs & XataRecord

export type DatabaseSchema = {
  xata: XataDocsRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL: 'https://sample-databases-v0sn1n.us-east-1.xata.sh/db/docs',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
