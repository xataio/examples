// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "characters",
    columns: [
      { name: "name", type: "string" },
      { name: "gender", type: "string" },
      { name: "job", type: "text" },
      { name: "house", type: "string" },
      { name: "wand", type: "string" },
      { name: "patronus", type: "string" },
      { name: "species", type: "string" },
      { name: "bloodStatus", type: "string" },
      { name: "hairColour", type: "string" },
      { name: "eyeColour", type: "string" },
      { name: "loyalty", type: "string" },
      { name: "skills", type: "string" },
      { name: "birth", type: "string" },
      { name: "death", type: "string" },
    ],
  },
  {
    name: "potions",
    columns: [
      { name: "name", type: "string" },
      { name: "knownIngredients", type: "text" },
      { name: "effect", type: "string" },
      { name: "characteristics", type: "text" },
      { name: "difficultyLevel", type: "string" },
    ],
  },
  {
    name: "spells",
    columns: [
      { name: "name", type: "string" },
      { name: "incantation", type: "string" },
      { name: "type", type: "string" },
      { name: "effect", type: "string" },
      { name: "light", type: "string" },
    ],
  },
  {
    name: "overview",
    columns: [
      { name: "table", type: "string" },
      { name: "contents", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Characters = InferredTypes["characters"];
export type CharactersRecord = Characters & XataRecord;

export type Potions = InferredTypes["potions"];
export type PotionsRecord = Potions & XataRecord;

export type Spells = InferredTypes["spells"];
export type SpellsRecord = Spells & XataRecord;

export type Overview = InferredTypes["overview"];
export type OverviewRecord = Overview & XataRecord;

export type DatabaseSchema = {
  characters: CharactersRecord;
  potions: PotionsRecord;
  spells: SpellsRecord;
  overview: OverviewRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://sample-databases-v0sn1n.us-east-1.xata.sh/db/harry-potter",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
